# Generated by Django 5.0.2 on 2025-06-09 10:39

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('programs_app', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_type', models.CharField(choices=[('budget', 'Бюджет'), ('contract', 'Контракт')], default='budget', max_length=10, verbose_name='Тип приёма')),
                ('status', models.CharField(choices=[('draft', 'Черновик'), ('submitted', 'Подано'), ('under_review', 'На рассмотрении'), ('accepted', 'Принято'), ('rejected', 'Отклонено')], default='draft', max_length=20, verbose_name='Статус заявления')),
                ('first_name', models.CharField(max_length=100, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=100, verbose_name='Фамилия')),
                ('middle_name', models.CharField(blank=True, max_length=100, verbose_name='Отчество')),
                ('passport_id', models.CharField(max_length=20, unique=True, verbose_name='Номер паспорта')),
                ('birth_date', models.DateField(verbose_name='Дата рождения')),
                ('phone', models.CharField(max_length=20, verbose_name='Телефон')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('passport_scan', models.FileField(upload_to='passports/', verbose_name='Скан паспорта')),
                ('education_document', models.FileField(upload_to='education/', verbose_name='Документ об образовании')),
                ('photo', models.ImageField(upload_to='photos/', verbose_name='Фотография')),
                ('total_score', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(300)], verbose_name='Общий балл')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('submitted_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата подачи')),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to=settings.AUTH_USER_MODEL, verbose_name='Абитуриент')),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='applications', to='programs_app.studyprogram', verbose_name='Направление подготовки')),
            ],
            options={
                'verbose_name': 'Заявление',
                'verbose_name_plural': 'Заявления',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SubjectScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Балл')),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scores', to='applications_app.application', verbose_name='Заявление')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='programs_app.subject', verbose_name='Предмет')),
            ],
            options={
                'verbose_name': 'Балл по предмету',
                'verbose_name_plural': 'Баллы по предметам',
                'ordering': ['subject'],
                'unique_together': {('application', 'subject')},
            },
        ),
    ]
